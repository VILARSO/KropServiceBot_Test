from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardMarkup, KeyboardButton
from config import CATEGORIES, MY_POSTS_PER_PAGE, VIEW_POSTS_PER_PAGE, TYPE_EMOJIS

def main_kb() -> InlineKeyboardMarkup:
    """–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é –±–æ—Ç–∞."""
    kb = InlineKeyboardMarkup(row_width=1)
    kb.add(
        InlineKeyboardButton("‚ûï –î–æ–¥–∞—Ç–∏ –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è", callback_data='add_post'),
        InlineKeyboardButton("üëÄ –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è", callback_data='view_posts'),
        InlineKeyboardButton("üìù –ú–æ—ó –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è", callback_data='my_posts'),
        InlineKeyboardButton("‚ùì –î–æ–ø–æ–º–æ–≥–∞", callback_data='help')
    )
    return kb

def categories_kb(is_post_creation: bool) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –¥–ª—è –≤–∏–±–æ—Ä—É –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó."""
    kb = InlineKeyboardMarkup(row_width=2)
    buttons = []
    for i, cat in enumerate(CATEGORIES): # –ü–µ—Ä–µ–±–∏—Ä–∞—î–º–æ —Å–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä—ñ–π (—Ä—è–¥–∫—ñ–≤)
        if is_post_creation:
            buttons.append(InlineKeyboardButton(cat, callback_data=f'post_cat_{i}'))
        else:
            buttons.append(InlineKeyboardButton(cat, callback_data=f'view_cat_{i}'))
    kb.add(*buttons)
    kb.add(InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="go_back_to_prev_step"))
    return kb

def type_kb() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –¥–ª—è –≤–∏–±–æ—Ä—É —Ç–∏–ø—É –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è (—Ä–æ–±–æ—Ç–∞/–ø–æ—Å–ª—É–≥–∞)."""
    kb = InlineKeyboardMarkup(row_width=2)
    kb.add(
        InlineKeyboardButton(f"{TYPE_EMOJIS['—Ä–æ–±–æ—Ç–∞']} –†–æ–±–æ—Ç–∞", callback_data='type_work'),
        InlineKeyboardButton(f"{TYPE_EMOJIS['–ø–æ—Å–ª—É–≥–∞']} –ü–æ—Å–ª—É–≥–∞", callback_data='type_service')
    )
    kb.add(InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="go_back_to_prev_step"))
    return kb

def view_types_kb() -> InlineKeyboardMarkup:
    """–ù–æ–≤–∞ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –¥–ª—è –≤–∏–±–æ—Ä—É —Ç–∏–ø—É –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è –ø—Ä–∏ –ø–µ—Ä–µ–≥–ª—è–¥—ñ."""
    kb = InlineKeyboardMarkup(row_width=2)
    kb.add(
        InlineKeyboardButton(f"{TYPE_EMOJIS['—Ä–æ–±–æ—Ç–∞']} –†–æ–±–æ—Ç–∞", callback_data='view_type_work'),
        InlineKeyboardButton(f"{TYPE_EMOJIS['–ø–æ—Å–ª—É–≥–∞']} –ü–æ—Å–ª—É–≥–∞", callback_data='view_type_service')
    )
    kb.add(InlineKeyboardButton("üè† –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é", callback_data="go_back_to_main_menu"))
    return kb

def confirm_add_post_kb() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –¥–ª—è –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è."""
    kb = InlineKeyboardMarkup(row_width=2)
    kb.add(
        InlineKeyboardButton("‚úÖ –ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏", callback_data="confirm_add_post"),
        InlineKeyboardButton("‚ùå –°–∫–∞—Å—É–≤–∞—Ç–∏", callback_data="go_back_to_main_menu")
    )
    return kb

def pagination_kb(current_page: int, posts_per_page: int, total_posts: int, action_prefix: str, category: str = None, post_type: str = None) -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –¥–ª—è –ø–∞–≥—ñ–Ω–∞—Ü—ñ—ó.
    :param current_page: –ü–æ—Ç–æ—á–Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞ (0-—ñ–Ω–¥–µ–∫—Å).
    :param posts_per_page: –ö—ñ–ª—å–∫—ñ—Å—Ç—å –æ–≥–æ–ª–æ—à–µ–Ω—å –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ.
    :param total_posts: –ó–∞–≥–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –æ–≥–æ–ª–æ—à–µ–Ω—å.
    :param action_prefix: –ü—Ä–µ—Ñ—ñ–∫—Å –¥–ª—è callback_data (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, 'view' –∞–±–æ 'my').
    :param category: –ù–∞–∑–≤–∞ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó (–¥–ª—è 'view' –æ–≥–æ–ª–æ—à–µ–Ω—å).
    :param post_type: –¢–∏–ø –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è (–¥–ª—è 'view' –æ–≥–æ–ª–æ—à–µ–Ω—å).
    """
    kb = InlineKeyboardMarkup(row_width=3)
    buttons = []

    has_prev = current_page > 0
    has_next = (current_page + 1) * posts_per_page < total_posts

    if has_prev:
        if action_prefix == 'view':
            buttons.append(InlineKeyboardButton("‚¨ÖÔ∏è –ü–æ–ø–µ—Ä–µ–¥–Ω—è", callback_data=f'{action_prefix}_page_{current_page - 1}_{category}_{post_type}'))
        else: # 'my'
            buttons.append(InlineKeyboardButton("‚¨ÖÔ∏è –ü–æ–ø–µ—Ä–µ–¥–Ω—è", callback_data=f'{action_prefix}_page_{current_page - 1}'))
    else:
        buttons.append(InlineKeyboardButton(" ", callback_data='ignore')) # –ü—É—Å—Ç–∞ –∫–Ω–æ–ø–∫–∞ –¥–ª—è –≤–∏—Ä—ñ–≤–Ω—é–≤–∞–Ω–Ω—è

    buttons.append(InlineKeyboardButton(f"–°—Ç–æ—Ä—ñ–Ω–∫–∞ {current_page + 1}", callback_data='ignore'))

    if has_next:
        if action_prefix == 'view':
            buttons.append(InlineKeyboardButton("–í–ø–µ—Ä–µ–¥ ‚û°Ô∏è", callback_data=f'{action_prefix}_page_{current_page + 1}_{category}_{post_type}'))
        else: # 'my'
            buttons.append(InlineKeyboardButton("–í–ø–µ—Ä–µ–¥ ‚û°Ô∏è", callback_data=f'{action_prefix}_page_{current_page + 1}'))
    else:
        buttons.append(InlineKeyboardButton(" ", callback_data='ignore')) # –ü—É—Å—Ç–∞ –∫–Ω–æ–ø–∫–∞ –¥–ª—è –≤–∏—Ä—ñ–≤–Ω—é–≤–∞–Ω–Ω—è

    kb.add(*buttons)

    if action_prefix == 'my':
        kb.add(InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é", callback_data='go_back_to_main_menu'))
    elif action_prefix == 'view':
        # –ö–æ–ª–∏ –ø–µ—Ä–µ–≥–ª—è–¥–∞—î–º–æ, —è–∫—â–æ –º–∏ –æ–±–∏—Ä–∞—î–º–æ –∫–∞—Ç–µ–≥–æ—Ä—ñ—é, –Ω–∞–º –ø–æ—Ç—Ä—ñ–±–Ω–æ –ø–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –≤–∏–±–æ—Ä—É —Ç–∏–ø—É, –∞ –Ω–µ –æ–¥—Ä–∞–∑—É –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é.
        kb.add(InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –¥–æ –≤–∏–±–æ—Ä—É –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó", callback_data='go_back_to_prev_step')) # –¶–µ –ø–æ–≤–µ—Ä–Ω–µ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–æ –≤–∏–±–æ—Ä—É —Ç–∏–ø—É, —è–∫—â–æ –ø–æ—Ç–æ—á–Ω–∏–π —Å—Ç–∞–Ω VIEW_POSTS_CATEGORY
        kb.add(InlineKeyboardButton("üè† –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é", callback_data="go_back_to_main_menu")) # –¢–∞–∫–æ–∂ –Ω–∞–¥–∞—î–º–æ –ø—Ä—è–º–∏–π —à–ª—è—Ö –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é
    return kb

def post_actions_kb(post_id: int) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –¥–ª—è –¥—ñ–π –∑ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–∏–º –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è–º (—Ä–µ–¥–∞–≥—É–≤–∞—Ç–∏, –≤–∏–¥–∞–ª–∏—Ç–∏)."""
    kb = InlineKeyboardMarkup(row_width=2)
    kb.add(
        InlineKeyboardButton("‚úèÔ∏è –†–µ–¥–∞–≥—É–≤–∞—Ç–∏", callback_data=f'edit_{post_id}'),
        InlineKeyboardButton("üóëÔ∏è –í–∏–¥–∞–ª–∏—Ç–∏", callback_data=f'delete_{post_id}')
    )
    kb.add(InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –¥–æ –º–æ—ó—Ö –æ–≥–æ–ª–æ—à–µ–Ω—å", callback_data='my_posts'))
    return kb

def edit_post_kb(post_id: int) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –¥–ª—è –≤–∏–±–æ—Ä—É –ø–æ–ª—è –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è –¥–ª—è —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è."""
    kb = InlineKeyboardMarkup(row_width=2)
    kb.add(
        InlineKeyboardButton("–û–ø–∏—Å", callback_data=f'edit_desc_{post_id}')
    )
    kb.add(InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=f"my_posts"))
    return kb

def confirm_delete_kb(post_id: int) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –¥–ª—è –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è."""
    kb = InlineKeyboardMarkup(row_width=2)
    kb.add(
        InlineKeyboardButton("‚úÖ –¢–∞–∫, –≤–∏–¥–∞–ª–∏—Ç–∏", callback_data=f'confirm_delete_{post_id}'),
        InlineKeyboardButton("‚ùå –ù—ñ, —Å–∫–∞—Å—É–≤–∞—Ç–∏", callback_data=f'cancel_delete_{post_id}')
    )
    return kb

def contact_kb() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –¥–ª—è –ø—Ä–æ–ø—É—Å–∫—É –≤–≤–µ–¥–µ–Ω–Ω—è –∫–æ–Ω—Ç–∞–∫—Ç—É."""
    kb = InlineKeyboardMarkup(row_width=1)
    kb.add(InlineKeyboardButton("–ü—Ä–æ–ø—É—Å—Ç–∏—Ç–∏", callback_data="skip_cont"))
    kb.add(InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="go_back_to_prev_step"))
    return kb

def back_kb() -> InlineKeyboardMarkup:
    """–£–Ω—ñ–≤–µ—Ä—Å–∞–ª—å–Ω–∞ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –∑ –∫–Ω–æ–ø–∫–æ—é "–ù–∞–∑–∞–¥"."""
    kb = InlineKeyboardMarkup(row_width=1)
    kb.add(InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="go_back_to_prev_step"))
    return kb
